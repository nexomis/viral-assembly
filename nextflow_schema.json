{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nexomis/viral-assembly/master/nextflow_schema.json",
    "title": "nexomis/viral-assembly pipeline parameters",
    "description": "Assemble viral genome and perform the associated QC. Starting from raw reads and one pre-built reference database in standard format (cf. README.md).",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "input/output",
            "type": "object",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "out_dir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": ".csv$",
                    "schema": "assets/input_schema.json",
                    "description": "Path to comma-separated file containing information about the samples you would like to analyse."
                },
                "ref_genomes": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/ref_genomes_schema.json",
                    "description": "Path to csv file containing information about the reference genomes."
                },
                "anchors": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/anchors_schema.json",
                    "description": "Path to csv file containing information about the anchors genomes."
                },
                "prot": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": ".csv$",
                    "schema": "assets/prot_schema.json",
                    "description": "Path to comma-separated file containing the proteome to use for annotation."
                },
                "class_dbs": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/class_dbs_schema.json",
                    "description": "Path to csv file containing information about the classification database for iterative removal of reads."
                },
                "save_fastp": {
                    "type": "boolean",
                    "description": "Save fastp trimmed fastq.",
                    "default": false
                },
                "save_clean": {
                    "type": "boolean",
                    "description": "Save clean fastq (after kraken2 removal / and bowtie2 anchor).",
                    "default": false
                },
                "save_anchored": {
                    "type": "boolean",
                    "description": "Save anchored fastq (after bowtie2 anchor).",
                    "default": false
                },
                "save_unclassed": {
                    "type": "boolean",
                    "description": "Save unclassed fastq (after kraken2 removal).",
                    "default": false
                },
                "save_aln": {
                    "type": "boolean",
                    "description": "Save mapping files (vs assemblies).",
                    "default": false
                },
                "out_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "exists": false,
                    "description": "The output directory where the results will be saved (must not already exist).",
                    "default": "out_dir"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "description": "PublishDir mode for process",
                    "default": "link"
                }
            }
        },
        "global_workflow": {
            "title": "global workflow",
            "type": "object",
            "description": "Options for global worflow",
            "properties": {
                "biocontainers_registry": {
                    "type": "string",
                    "default": "quay.io",
                    "description": "Biocontaners registry of docker images. Note: Does not applied to every containers process"
                },
                "skip_primary": {
                    "type": "boolean",
                    "description": "Skip primary analysis",
                    "default": false
                }
            }
        },
        "fastp_options": {
            "title": "fastp (primary analysis)",
            "type": "object",
            "description": "Options for the fastp software.",
            "properties": {
                "trim_poly_g": {
                    "type": "boolean",
                    "description": "Enable polyG tail trimming.",
                    "default": true
                },
                "trim_poly_x": {
                    "type": "boolean",
                    "description": "Enable polyX tail trimming.",
                    "default": true
                },
                "min_avg_qual": {
                    "type": "integer",
                    "description": "Minimum average quality to keep a read.",
                    "default": 28
                },
                "min_len": {
                    "type": "integer",
                    "description": "Minimum length to keep a read.",
                    "default": 41
                },
                "cut_right_window_size": {
                    "type": "integer",
                    "description": "The window size for sliding window trimming on the right.",
                    "default": 4
                },
                "cut_right_mean_qual": {
                    "type": "integer",
                    "description": "The mean quality requirement for sliding window trimming on the right.",
                    "default": 20
                },
                "cut_tail_window_size": {
                    "type": "integer",
                    "description": "The window size for sliding window trimming on the tail.",
                    "default": 4
                },
                "cut_tail_mean_qual": {
                    "type": "integer",
                    "description": "The mean quality requirement for sliding window trimming on the tail.",
                    "default": 25
                }
            }
        },
        "primary_opts": {
            "title": "primary analysis",
            "type": "object",
            "description": "Options for Primary analysis",
            "properties": {
                "kraken2_db": {
                    "type": "string",
                    "format": "directory-path",
                    "exists": true, 
                    "description": "Kraken2 index as a directory"
                },
                "num_reads_sample_qc": {
                    "type": "integer",
                    "default": 250000,
                    "description": "Number of reads to subsample before kraken2 and fastqc"
                }, 
                "tax_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to a custom taxonomy directory for recentrifuge.",
                    "default": "${projectDir}/modules/subworkflows/primary/taxdump_26092024"
                }
            }
        },
        "denovo_assembly": {
            "title": "denovo assembly",
            "type": "object",
            "description": "Options for the denovo assembly of interest genome",
            "properties": {
                "abacas_MUMmer_program": {
                    "type": "string",
                    "default": "nucmer",
                    "options": ["nucmer", "promer"],
                    "description": "ABACAS - The MUMmer program used by ABACAS for alignment. Available options: 'nucmer' or 'promer'."
                },
                "args_spades": {
                    "type": "string",
                    "default": "",
                    "description": "ABACAS - The MUMmer program used by ABACAS for alignment. Available options: 'nucmer' or 'promer'."
                }
            }
        },
        "hannot": {
            "title": "Hannot ars",
            "type": "object",
            "description": "Options for homology annotation",
            "properties": {
                "miniprot_opts": {
                    "type": "string",
                    "default": "-k 3 -L 5 -O 5 -n 1 -N 1000 -l 3 -E 0 -J 5 -F 8 -B 5 --outs 0.1 --outn 5",
                    "description": "Options for the Miniprot software."
                }
            }
        },
        "mapping_on_assembled": {
            "title": "mapping on assembled",
            "type": "object",
            "description": "Options for the filtered reads (trimming + host filtering) on assembly scaffolds",
            "properties": {
                "args_bowtie2": {
                    "type": "string",
                    "default": "--end-to-end",
                    "description": "Bowtie2 mapping args"
                }
            }
        },
        "resources_options": {
            "title": "Resources options",
            "type": "object",
            "description": "Define The default resources for nextflow",
            "properties": {
                "ncpus_low": {
                    "type": "integer",
                    "default": 4,
                    "description": "Number of cpu for low process."
                },
                "ncpus_med": {
                    "type": "integer",
                    "default": 8,
                    "description": "Number of cpu for medium process."
                },
                "ncpus_high": {
                    "type": "integer",
                    "default": 16,
                    "description": "Number of cpu for high process."
                },
                "mem_low": {
                    "type": "integer",
                    "default": 15,
                    "description": "Memory for low process."
                },
                "mem_med": {
                    "type": "integer",
                    "default": 30,
                    "description": "Memory for mid process."
                },
                "mem_high": {
                    "type": "integer",
                    "default": 120,
                    "description": "Memory for high process.."
                },
                "spades_memory": {
                    "type": "integer",
                    "default": 28,
                    "description": "Amount of memory in GB for SPAdes, default is '28' (GB)."
                },
                "kraken2_memory": {
                    "type": "integer",
                    "default": 10,
                    "description": "Amount of memory in GB for Kraken2, default is 12 GB."
                },
                "kraken2_cpus": {
                    "type": "integer",
                    "default": 4,
                    "description": "Amount of CPUs for kraken2"
                }
            }
        }
    },
    "allOf": [
        { "$ref": "#/definitions/input_output_options" },
        { "$ref": "#/definitions/global_workflow" },
        { "$ref": "#/definitions/fastp_options" },
        { "$ref": "#/definitions/denovo_assembly" },
        { "$ref": "#/definitions/primary_opts" },
        { "$ref": "#/definitions/hannot" },
        { "$ref": "#/definitions/mapping_on_assembled" },
        { "$ref": "#/definitions/resources_options" }
    ]
}
